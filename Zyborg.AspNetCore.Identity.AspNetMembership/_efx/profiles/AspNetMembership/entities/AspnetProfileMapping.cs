#pragma warning disable IDE0073 // The file header is missing or not located at the top of the file
/** THIS IS AUTOGENERATED BY CONJURE EFX **/
#pragma warning restore IDE0073 // The file header is missing or not located at the top of the file

using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Zyborg.AspNetCore.Identity.AspNetMembership.Membership.Data.Mapping
{
    /// <summary>
    /// Allows configuration for an entity type <see cref="Zyborg.AspNetCore.Identity.AspNetMembership.Membership.Data.Entities.AspnetProfile" />
    /// </summary>
    public partial class AspnetProfileMap
        : IEntityTypeConfiguration<Zyborg.AspNetCore.Identity.AspNetMembership.Membership.Data.Entities.AspnetProfile>
    {
        /// <summary>
        /// Configures the entity of type <see cref="Zyborg.AspNetCore.Identity.AspNetMembership.Membership.Data.Entities.AspnetProfile" />
        /// </summary>
        /// <param name="builder">The builder to be used to configure the entity type.</param>
        public void Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<Zyborg.AspNetCore.Identity.AspNetMembership.Membership.Data.Entities.AspnetProfile> builder)
        {
            #region Generated Configure

            // table
            builder.ToTable("aspnet_Profile", "dbo");

            // key
            builder.HasKey(t => t.UserId);

            // properties
            builder.Property(t => t.UserId)
                .IsRequired()
                .HasColumnName("UserId")
                .HasColumnType("uniqueidentifier")
                ;
            builder.Property(t => t.PropertyNames)
                .IsRequired()
                .HasColumnName("PropertyNames")
                .HasColumnType("ntext")
                ;
            builder.Property(t => t.PropertyValuesString)
                .IsRequired()
                .HasColumnName("PropertyValuesString")
                .HasColumnType("ntext")
                ;
            builder.Property(t => t.PropertyValuesBinary)
                .IsRequired()
                .HasColumnName("PropertyValuesBinary")
                .HasColumnType("image")
                ;
            builder.Property(t => t.LastUpdatedDate)
                .IsRequired()
                .HasColumnName("LastUpdatedDate")
                .HasColumnType("datetime")
                ;

            // relationships
            builder.HasOne(t => t.AspnetUser)
                .WithOne(t => t.AspnetProfile)
                .HasForeignKey<Zyborg.AspNetCore.Identity.AspNetMembership.Membership.Data.Entities.AspnetProfile>(d => d.UserId)
                .HasConstraintName("FK__aspnet_Pr__UserI__403A8C7D")
                ;

            #endregion // Generated Configure
        }
    }
}
